
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Topics` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Topics
 * 
 */
export type TopicsModel = runtime.Types.Result.DefaultSelection<Prisma.$TopicsPayload>

export type AggregateTopics = {
  _count: TopicsCountAggregateOutputType | null
  _avg: TopicsAvgAggregateOutputType | null
  _sum: TopicsSumAggregateOutputType | null
  _min: TopicsMinAggregateOutputType | null
  _max: TopicsMaxAggregateOutputType | null
}

export type TopicsAvgAggregateOutputType = {
  likes: number | null
}

export type TopicsSumAggregateOutputType = {
  likes: number | null
}

export type TopicsMinAggregateOutputType = {
  id: string | null
  createdAt: Date | null
  updatedAt: Date | null
  title: string | null
  shortDescription: string | null
  description: string | null
  duration: Date | null
  image: string | null
  likes: number | null
  content: string | null
  level: $Enums.Level | null
  userId: string | null
}

export type TopicsMaxAggregateOutputType = {
  id: string | null
  createdAt: Date | null
  updatedAt: Date | null
  title: string | null
  shortDescription: string | null
  description: string | null
  duration: Date | null
  image: string | null
  likes: number | null
  content: string | null
  level: $Enums.Level | null
  userId: string | null
}

export type TopicsCountAggregateOutputType = {
  id: number
  createdAt: number
  updatedAt: number
  title: number
  shortDescription: number
  description: number
  duration: number
  image: number
  likes: number
  content: number
  level: number
  userId: number
  _all: number
}


export type TopicsAvgAggregateInputType = {
  likes?: true
}

export type TopicsSumAggregateInputType = {
  likes?: true
}

export type TopicsMinAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  title?: true
  shortDescription?: true
  description?: true
  duration?: true
  image?: true
  likes?: true
  content?: true
  level?: true
  userId?: true
}

export type TopicsMaxAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  title?: true
  shortDescription?: true
  description?: true
  duration?: true
  image?: true
  likes?: true
  content?: true
  level?: true
  userId?: true
}

export type TopicsCountAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  title?: true
  shortDescription?: true
  description?: true
  duration?: true
  image?: true
  likes?: true
  content?: true
  level?: true
  userId?: true
  _all?: true
}

export type TopicsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Topics to aggregate.
   */
  where?: Prisma.TopicsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Topics to fetch.
   */
  orderBy?: Prisma.TopicsOrderByWithRelationInput | Prisma.TopicsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TopicsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Topics from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Topics.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Topics
  **/
  _count?: true | TopicsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: TopicsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: TopicsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TopicsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TopicsMaxAggregateInputType
}

export type GetTopicsAggregateType<T extends TopicsAggregateArgs> = {
      [P in keyof T & keyof AggregateTopics]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTopics[P]>
    : Prisma.GetScalarType<T[P], AggregateTopics[P]>
}




export type TopicsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TopicsWhereInput
  orderBy?: Prisma.TopicsOrderByWithAggregationInput | Prisma.TopicsOrderByWithAggregationInput[]
  by: Prisma.TopicsScalarFieldEnum[] | Prisma.TopicsScalarFieldEnum
  having?: Prisma.TopicsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TopicsCountAggregateInputType | true
  _avg?: TopicsAvgAggregateInputType
  _sum?: TopicsSumAggregateInputType
  _min?: TopicsMinAggregateInputType
  _max?: TopicsMaxAggregateInputType
}

export type TopicsGroupByOutputType = {
  id: string
  createdAt: Date
  updatedAt: Date
  title: string
  shortDescription: string
  description: string
  duration: Date
  image: string | null
  likes: number
  content: string
  level: $Enums.Level
  userId: string
  _count: TopicsCountAggregateOutputType | null
  _avg: TopicsAvgAggregateOutputType | null
  _sum: TopicsSumAggregateOutputType | null
  _min: TopicsMinAggregateOutputType | null
  _max: TopicsMaxAggregateOutputType | null
}

type GetTopicsGroupByPayload<T extends TopicsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TopicsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TopicsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TopicsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TopicsGroupByOutputType[P]>
      }
    >
  >



export type TopicsWhereInput = {
  AND?: Prisma.TopicsWhereInput | Prisma.TopicsWhereInput[]
  OR?: Prisma.TopicsWhereInput[]
  NOT?: Prisma.TopicsWhereInput | Prisma.TopicsWhereInput[]
  id?: Prisma.StringFilter<"Topics"> | string
  createdAt?: Prisma.DateTimeFilter<"Topics"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Topics"> | Date | string
  title?: Prisma.StringFilter<"Topics"> | string
  shortDescription?: Prisma.StringFilter<"Topics"> | string
  description?: Prisma.StringFilter<"Topics"> | string
  duration?: Prisma.DateTimeFilter<"Topics"> | Date | string
  image?: Prisma.StringNullableFilter<"Topics"> | string | null
  likes?: Prisma.IntFilter<"Topics"> | number
  content?: Prisma.StringFilter<"Topics"> | string
  level?: Prisma.EnumLevelFilter<"Topics"> | $Enums.Level
  userId?: Prisma.StringFilter<"Topics"> | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  favorites?: Prisma.FavoriteListRelationFilter
  bookmark?: Prisma.BookmarkListRelationFilter
}

export type TopicsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  title?: Prisma.SortOrder
  shortDescription?: Prisma.SortOrder
  description?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  image?: Prisma.SortOrderInput | Prisma.SortOrder
  likes?: Prisma.SortOrder
  content?: Prisma.SortOrder
  level?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
  favorites?: Prisma.FavoriteOrderByRelationAggregateInput
  bookmark?: Prisma.BookmarkOrderByRelationAggregateInput
}

export type TopicsWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.TopicsWhereInput | Prisma.TopicsWhereInput[]
  OR?: Prisma.TopicsWhereInput[]
  NOT?: Prisma.TopicsWhereInput | Prisma.TopicsWhereInput[]
  createdAt?: Prisma.DateTimeFilter<"Topics"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Topics"> | Date | string
  title?: Prisma.StringFilter<"Topics"> | string
  shortDescription?: Prisma.StringFilter<"Topics"> | string
  description?: Prisma.StringFilter<"Topics"> | string
  duration?: Prisma.DateTimeFilter<"Topics"> | Date | string
  image?: Prisma.StringNullableFilter<"Topics"> | string | null
  likes?: Prisma.IntFilter<"Topics"> | number
  content?: Prisma.StringFilter<"Topics"> | string
  level?: Prisma.EnumLevelFilter<"Topics"> | $Enums.Level
  userId?: Prisma.StringFilter<"Topics"> | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  favorites?: Prisma.FavoriteListRelationFilter
  bookmark?: Prisma.BookmarkListRelationFilter
}, "id">

export type TopicsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  title?: Prisma.SortOrder
  shortDescription?: Prisma.SortOrder
  description?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  image?: Prisma.SortOrderInput | Prisma.SortOrder
  likes?: Prisma.SortOrder
  content?: Prisma.SortOrder
  level?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  _count?: Prisma.TopicsCountOrderByAggregateInput
  _avg?: Prisma.TopicsAvgOrderByAggregateInput
  _max?: Prisma.TopicsMaxOrderByAggregateInput
  _min?: Prisma.TopicsMinOrderByAggregateInput
  _sum?: Prisma.TopicsSumOrderByAggregateInput
}

export type TopicsScalarWhereWithAggregatesInput = {
  AND?: Prisma.TopicsScalarWhereWithAggregatesInput | Prisma.TopicsScalarWhereWithAggregatesInput[]
  OR?: Prisma.TopicsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TopicsScalarWhereWithAggregatesInput | Prisma.TopicsScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Topics"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Topics"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Topics"> | Date | string
  title?: Prisma.StringWithAggregatesFilter<"Topics"> | string
  shortDescription?: Prisma.StringWithAggregatesFilter<"Topics"> | string
  description?: Prisma.StringWithAggregatesFilter<"Topics"> | string
  duration?: Prisma.DateTimeWithAggregatesFilter<"Topics"> | Date | string
  image?: Prisma.StringNullableWithAggregatesFilter<"Topics"> | string | null
  likes?: Prisma.IntWithAggregatesFilter<"Topics"> | number
  content?: Prisma.StringWithAggregatesFilter<"Topics"> | string
  level?: Prisma.EnumLevelWithAggregatesFilter<"Topics"> | $Enums.Level
  userId?: Prisma.StringWithAggregatesFilter<"Topics"> | string
}

export type TopicsCreateInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  shortDescription: string
  description: string
  duration: Date | string
  image?: string | null
  likes: number
  content: string
  level: $Enums.Level
  user: Prisma.UserCreateNestedOneWithoutTopicsInput
  favorites?: Prisma.FavoriteCreateNestedManyWithoutTopicsInput
  bookmark?: Prisma.BookmarkCreateNestedManyWithoutTopicsInput
}

export type TopicsUncheckedCreateInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  shortDescription: string
  description: string
  duration: Date | string
  image?: string | null
  likes: number
  content: string
  level: $Enums.Level
  userId: string
  favorites?: Prisma.FavoriteUncheckedCreateNestedManyWithoutTopicsInput
  bookmark?: Prisma.BookmarkUncheckedCreateNestedManyWithoutTopicsInput
}

export type TopicsUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  shortDescription?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  duration?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.EnumLevelFieldUpdateOperationsInput | $Enums.Level
  user?: Prisma.UserUpdateOneRequiredWithoutTopicsNestedInput
  favorites?: Prisma.FavoriteUpdateManyWithoutTopicsNestedInput
  bookmark?: Prisma.BookmarkUpdateManyWithoutTopicsNestedInput
}

export type TopicsUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  shortDescription?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  duration?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.EnumLevelFieldUpdateOperationsInput | $Enums.Level
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  favorites?: Prisma.FavoriteUncheckedUpdateManyWithoutTopicsNestedInput
  bookmark?: Prisma.BookmarkUncheckedUpdateManyWithoutTopicsNestedInput
}

export type TopicsCreateManyInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  shortDescription: string
  description: string
  duration: Date | string
  image?: string | null
  likes: number
  content: string
  level: $Enums.Level
  userId: string
}

export type TopicsUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  shortDescription?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  duration?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.EnumLevelFieldUpdateOperationsInput | $Enums.Level
}

export type TopicsUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  shortDescription?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  duration?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.EnumLevelFieldUpdateOperationsInput | $Enums.Level
  userId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type TopicsListRelationFilter = {
  every?: Prisma.TopicsWhereInput
  some?: Prisma.TopicsWhereInput
  none?: Prisma.TopicsWhereInput
}

export type TopicsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type TopicsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  title?: Prisma.SortOrder
  shortDescription?: Prisma.SortOrder
  description?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  image?: Prisma.SortOrder
  likes?: Prisma.SortOrder
  content?: Prisma.SortOrder
  level?: Prisma.SortOrder
  userId?: Prisma.SortOrder
}

export type TopicsAvgOrderByAggregateInput = {
  likes?: Prisma.SortOrder
}

export type TopicsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  title?: Prisma.SortOrder
  shortDescription?: Prisma.SortOrder
  description?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  image?: Prisma.SortOrder
  likes?: Prisma.SortOrder
  content?: Prisma.SortOrder
  level?: Prisma.SortOrder
  userId?: Prisma.SortOrder
}

export type TopicsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  title?: Prisma.SortOrder
  shortDescription?: Prisma.SortOrder
  description?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  image?: Prisma.SortOrder
  likes?: Prisma.SortOrder
  content?: Prisma.SortOrder
  level?: Prisma.SortOrder
  userId?: Prisma.SortOrder
}

export type TopicsSumOrderByAggregateInput = {
  likes?: Prisma.SortOrder
}

export type TopicsCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.TopicsCreateWithoutUserInput, Prisma.TopicsUncheckedCreateWithoutUserInput> | Prisma.TopicsCreateWithoutUserInput[] | Prisma.TopicsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.TopicsCreateOrConnectWithoutUserInput | Prisma.TopicsCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.TopicsCreateManyUserInputEnvelope
  connect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
}

export type TopicsUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.TopicsCreateWithoutUserInput, Prisma.TopicsUncheckedCreateWithoutUserInput> | Prisma.TopicsCreateWithoutUserInput[] | Prisma.TopicsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.TopicsCreateOrConnectWithoutUserInput | Prisma.TopicsCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.TopicsCreateManyUserInputEnvelope
  connect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
}

export type TopicsUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.TopicsCreateWithoutUserInput, Prisma.TopicsUncheckedCreateWithoutUserInput> | Prisma.TopicsCreateWithoutUserInput[] | Prisma.TopicsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.TopicsCreateOrConnectWithoutUserInput | Prisma.TopicsCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.TopicsUpsertWithWhereUniqueWithoutUserInput | Prisma.TopicsUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.TopicsCreateManyUserInputEnvelope
  set?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  disconnect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  delete?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  connect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  update?: Prisma.TopicsUpdateWithWhereUniqueWithoutUserInput | Prisma.TopicsUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.TopicsUpdateManyWithWhereWithoutUserInput | Prisma.TopicsUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.TopicsScalarWhereInput | Prisma.TopicsScalarWhereInput[]
}

export type TopicsUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.TopicsCreateWithoutUserInput, Prisma.TopicsUncheckedCreateWithoutUserInput> | Prisma.TopicsCreateWithoutUserInput[] | Prisma.TopicsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.TopicsCreateOrConnectWithoutUserInput | Prisma.TopicsCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.TopicsUpsertWithWhereUniqueWithoutUserInput | Prisma.TopicsUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.TopicsCreateManyUserInputEnvelope
  set?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  disconnect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  delete?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  connect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  update?: Prisma.TopicsUpdateWithWhereUniqueWithoutUserInput | Prisma.TopicsUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.TopicsUpdateManyWithWhereWithoutUserInput | Prisma.TopicsUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.TopicsScalarWhereInput | Prisma.TopicsScalarWhereInput[]
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type EnumLevelFieldUpdateOperationsInput = {
  set?: $Enums.Level
}

export type TopicsCreateNestedManyWithoutFavoritesInput = {
  create?: Prisma.XOR<Prisma.TopicsCreateWithoutFavoritesInput, Prisma.TopicsUncheckedCreateWithoutFavoritesInput> | Prisma.TopicsCreateWithoutFavoritesInput[] | Prisma.TopicsUncheckedCreateWithoutFavoritesInput[]
  connectOrCreate?: Prisma.TopicsCreateOrConnectWithoutFavoritesInput | Prisma.TopicsCreateOrConnectWithoutFavoritesInput[]
  connect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
}

export type TopicsUncheckedCreateNestedManyWithoutFavoritesInput = {
  create?: Prisma.XOR<Prisma.TopicsCreateWithoutFavoritesInput, Prisma.TopicsUncheckedCreateWithoutFavoritesInput> | Prisma.TopicsCreateWithoutFavoritesInput[] | Prisma.TopicsUncheckedCreateWithoutFavoritesInput[]
  connectOrCreate?: Prisma.TopicsCreateOrConnectWithoutFavoritesInput | Prisma.TopicsCreateOrConnectWithoutFavoritesInput[]
  connect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
}

export type TopicsUpdateManyWithoutFavoritesNestedInput = {
  create?: Prisma.XOR<Prisma.TopicsCreateWithoutFavoritesInput, Prisma.TopicsUncheckedCreateWithoutFavoritesInput> | Prisma.TopicsCreateWithoutFavoritesInput[] | Prisma.TopicsUncheckedCreateWithoutFavoritesInput[]
  connectOrCreate?: Prisma.TopicsCreateOrConnectWithoutFavoritesInput | Prisma.TopicsCreateOrConnectWithoutFavoritesInput[]
  upsert?: Prisma.TopicsUpsertWithWhereUniqueWithoutFavoritesInput | Prisma.TopicsUpsertWithWhereUniqueWithoutFavoritesInput[]
  set?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  disconnect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  delete?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  connect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  update?: Prisma.TopicsUpdateWithWhereUniqueWithoutFavoritesInput | Prisma.TopicsUpdateWithWhereUniqueWithoutFavoritesInput[]
  updateMany?: Prisma.TopicsUpdateManyWithWhereWithoutFavoritesInput | Prisma.TopicsUpdateManyWithWhereWithoutFavoritesInput[]
  deleteMany?: Prisma.TopicsScalarWhereInput | Prisma.TopicsScalarWhereInput[]
}

export type TopicsUncheckedUpdateManyWithoutFavoritesNestedInput = {
  create?: Prisma.XOR<Prisma.TopicsCreateWithoutFavoritesInput, Prisma.TopicsUncheckedCreateWithoutFavoritesInput> | Prisma.TopicsCreateWithoutFavoritesInput[] | Prisma.TopicsUncheckedCreateWithoutFavoritesInput[]
  connectOrCreate?: Prisma.TopicsCreateOrConnectWithoutFavoritesInput | Prisma.TopicsCreateOrConnectWithoutFavoritesInput[]
  upsert?: Prisma.TopicsUpsertWithWhereUniqueWithoutFavoritesInput | Prisma.TopicsUpsertWithWhereUniqueWithoutFavoritesInput[]
  set?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  disconnect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  delete?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  connect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  update?: Prisma.TopicsUpdateWithWhereUniqueWithoutFavoritesInput | Prisma.TopicsUpdateWithWhereUniqueWithoutFavoritesInput[]
  updateMany?: Prisma.TopicsUpdateManyWithWhereWithoutFavoritesInput | Prisma.TopicsUpdateManyWithWhereWithoutFavoritesInput[]
  deleteMany?: Prisma.TopicsScalarWhereInput | Prisma.TopicsScalarWhereInput[]
}

export type TopicsCreateNestedManyWithoutBookmarkInput = {
  create?: Prisma.XOR<Prisma.TopicsCreateWithoutBookmarkInput, Prisma.TopicsUncheckedCreateWithoutBookmarkInput> | Prisma.TopicsCreateWithoutBookmarkInput[] | Prisma.TopicsUncheckedCreateWithoutBookmarkInput[]
  connectOrCreate?: Prisma.TopicsCreateOrConnectWithoutBookmarkInput | Prisma.TopicsCreateOrConnectWithoutBookmarkInput[]
  connect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
}

export type TopicsUncheckedCreateNestedManyWithoutBookmarkInput = {
  create?: Prisma.XOR<Prisma.TopicsCreateWithoutBookmarkInput, Prisma.TopicsUncheckedCreateWithoutBookmarkInput> | Prisma.TopicsCreateWithoutBookmarkInput[] | Prisma.TopicsUncheckedCreateWithoutBookmarkInput[]
  connectOrCreate?: Prisma.TopicsCreateOrConnectWithoutBookmarkInput | Prisma.TopicsCreateOrConnectWithoutBookmarkInput[]
  connect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
}

export type TopicsUpdateManyWithoutBookmarkNestedInput = {
  create?: Prisma.XOR<Prisma.TopicsCreateWithoutBookmarkInput, Prisma.TopicsUncheckedCreateWithoutBookmarkInput> | Prisma.TopicsCreateWithoutBookmarkInput[] | Prisma.TopicsUncheckedCreateWithoutBookmarkInput[]
  connectOrCreate?: Prisma.TopicsCreateOrConnectWithoutBookmarkInput | Prisma.TopicsCreateOrConnectWithoutBookmarkInput[]
  upsert?: Prisma.TopicsUpsertWithWhereUniqueWithoutBookmarkInput | Prisma.TopicsUpsertWithWhereUniqueWithoutBookmarkInput[]
  set?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  disconnect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  delete?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  connect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  update?: Prisma.TopicsUpdateWithWhereUniqueWithoutBookmarkInput | Prisma.TopicsUpdateWithWhereUniqueWithoutBookmarkInput[]
  updateMany?: Prisma.TopicsUpdateManyWithWhereWithoutBookmarkInput | Prisma.TopicsUpdateManyWithWhereWithoutBookmarkInput[]
  deleteMany?: Prisma.TopicsScalarWhereInput | Prisma.TopicsScalarWhereInput[]
}

export type TopicsUncheckedUpdateManyWithoutBookmarkNestedInput = {
  create?: Prisma.XOR<Prisma.TopicsCreateWithoutBookmarkInput, Prisma.TopicsUncheckedCreateWithoutBookmarkInput> | Prisma.TopicsCreateWithoutBookmarkInput[] | Prisma.TopicsUncheckedCreateWithoutBookmarkInput[]
  connectOrCreate?: Prisma.TopicsCreateOrConnectWithoutBookmarkInput | Prisma.TopicsCreateOrConnectWithoutBookmarkInput[]
  upsert?: Prisma.TopicsUpsertWithWhereUniqueWithoutBookmarkInput | Prisma.TopicsUpsertWithWhereUniqueWithoutBookmarkInput[]
  set?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  disconnect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  delete?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  connect?: Prisma.TopicsWhereUniqueInput | Prisma.TopicsWhereUniqueInput[]
  update?: Prisma.TopicsUpdateWithWhereUniqueWithoutBookmarkInput | Prisma.TopicsUpdateWithWhereUniqueWithoutBookmarkInput[]
  updateMany?: Prisma.TopicsUpdateManyWithWhereWithoutBookmarkInput | Prisma.TopicsUpdateManyWithWhereWithoutBookmarkInput[]
  deleteMany?: Prisma.TopicsScalarWhereInput | Prisma.TopicsScalarWhereInput[]
}

export type TopicsCreateWithoutUserInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  shortDescription: string
  description: string
  duration: Date | string
  image?: string | null
  likes: number
  content: string
  level: $Enums.Level
  favorites?: Prisma.FavoriteCreateNestedManyWithoutTopicsInput
  bookmark?: Prisma.BookmarkCreateNestedManyWithoutTopicsInput
}

export type TopicsUncheckedCreateWithoutUserInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  shortDescription: string
  description: string
  duration: Date | string
  image?: string | null
  likes: number
  content: string
  level: $Enums.Level
  favorites?: Prisma.FavoriteUncheckedCreateNestedManyWithoutTopicsInput
  bookmark?: Prisma.BookmarkUncheckedCreateNestedManyWithoutTopicsInput
}

export type TopicsCreateOrConnectWithoutUserInput = {
  where: Prisma.TopicsWhereUniqueInput
  create: Prisma.XOR<Prisma.TopicsCreateWithoutUserInput, Prisma.TopicsUncheckedCreateWithoutUserInput>
}

export type TopicsCreateManyUserInputEnvelope = {
  data: Prisma.TopicsCreateManyUserInput | Prisma.TopicsCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type TopicsUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.TopicsWhereUniqueInput
  update: Prisma.XOR<Prisma.TopicsUpdateWithoutUserInput, Prisma.TopicsUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.TopicsCreateWithoutUserInput, Prisma.TopicsUncheckedCreateWithoutUserInput>
}

export type TopicsUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.TopicsWhereUniqueInput
  data: Prisma.XOR<Prisma.TopicsUpdateWithoutUserInput, Prisma.TopicsUncheckedUpdateWithoutUserInput>
}

export type TopicsUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.TopicsScalarWhereInput
  data: Prisma.XOR<Prisma.TopicsUpdateManyMutationInput, Prisma.TopicsUncheckedUpdateManyWithoutUserInput>
}

export type TopicsScalarWhereInput = {
  AND?: Prisma.TopicsScalarWhereInput | Prisma.TopicsScalarWhereInput[]
  OR?: Prisma.TopicsScalarWhereInput[]
  NOT?: Prisma.TopicsScalarWhereInput | Prisma.TopicsScalarWhereInput[]
  id?: Prisma.StringFilter<"Topics"> | string
  createdAt?: Prisma.DateTimeFilter<"Topics"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Topics"> | Date | string
  title?: Prisma.StringFilter<"Topics"> | string
  shortDescription?: Prisma.StringFilter<"Topics"> | string
  description?: Prisma.StringFilter<"Topics"> | string
  duration?: Prisma.DateTimeFilter<"Topics"> | Date | string
  image?: Prisma.StringNullableFilter<"Topics"> | string | null
  likes?: Prisma.IntFilter<"Topics"> | number
  content?: Prisma.StringFilter<"Topics"> | string
  level?: Prisma.EnumLevelFilter<"Topics"> | $Enums.Level
  userId?: Prisma.StringFilter<"Topics"> | string
}

export type TopicsCreateWithoutFavoritesInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  shortDescription: string
  description: string
  duration: Date | string
  image?: string | null
  likes: number
  content: string
  level: $Enums.Level
  user: Prisma.UserCreateNestedOneWithoutTopicsInput
  bookmark?: Prisma.BookmarkCreateNestedManyWithoutTopicsInput
}

export type TopicsUncheckedCreateWithoutFavoritesInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  shortDescription: string
  description: string
  duration: Date | string
  image?: string | null
  likes: number
  content: string
  level: $Enums.Level
  userId: string
  bookmark?: Prisma.BookmarkUncheckedCreateNestedManyWithoutTopicsInput
}

export type TopicsCreateOrConnectWithoutFavoritesInput = {
  where: Prisma.TopicsWhereUniqueInput
  create: Prisma.XOR<Prisma.TopicsCreateWithoutFavoritesInput, Prisma.TopicsUncheckedCreateWithoutFavoritesInput>
}

export type TopicsUpsertWithWhereUniqueWithoutFavoritesInput = {
  where: Prisma.TopicsWhereUniqueInput
  update: Prisma.XOR<Prisma.TopicsUpdateWithoutFavoritesInput, Prisma.TopicsUncheckedUpdateWithoutFavoritesInput>
  create: Prisma.XOR<Prisma.TopicsCreateWithoutFavoritesInput, Prisma.TopicsUncheckedCreateWithoutFavoritesInput>
}

export type TopicsUpdateWithWhereUniqueWithoutFavoritesInput = {
  where: Prisma.TopicsWhereUniqueInput
  data: Prisma.XOR<Prisma.TopicsUpdateWithoutFavoritesInput, Prisma.TopicsUncheckedUpdateWithoutFavoritesInput>
}

export type TopicsUpdateManyWithWhereWithoutFavoritesInput = {
  where: Prisma.TopicsScalarWhereInput
  data: Prisma.XOR<Prisma.TopicsUpdateManyMutationInput, Prisma.TopicsUncheckedUpdateManyWithoutFavoritesInput>
}

export type TopicsCreateWithoutBookmarkInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  shortDescription: string
  description: string
  duration: Date | string
  image?: string | null
  likes: number
  content: string
  level: $Enums.Level
  user: Prisma.UserCreateNestedOneWithoutTopicsInput
  favorites?: Prisma.FavoriteCreateNestedManyWithoutTopicsInput
}

export type TopicsUncheckedCreateWithoutBookmarkInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  shortDescription: string
  description: string
  duration: Date | string
  image?: string | null
  likes: number
  content: string
  level: $Enums.Level
  userId: string
  favorites?: Prisma.FavoriteUncheckedCreateNestedManyWithoutTopicsInput
}

export type TopicsCreateOrConnectWithoutBookmarkInput = {
  where: Prisma.TopicsWhereUniqueInput
  create: Prisma.XOR<Prisma.TopicsCreateWithoutBookmarkInput, Prisma.TopicsUncheckedCreateWithoutBookmarkInput>
}

export type TopicsUpsertWithWhereUniqueWithoutBookmarkInput = {
  where: Prisma.TopicsWhereUniqueInput
  update: Prisma.XOR<Prisma.TopicsUpdateWithoutBookmarkInput, Prisma.TopicsUncheckedUpdateWithoutBookmarkInput>
  create: Prisma.XOR<Prisma.TopicsCreateWithoutBookmarkInput, Prisma.TopicsUncheckedCreateWithoutBookmarkInput>
}

export type TopicsUpdateWithWhereUniqueWithoutBookmarkInput = {
  where: Prisma.TopicsWhereUniqueInput
  data: Prisma.XOR<Prisma.TopicsUpdateWithoutBookmarkInput, Prisma.TopicsUncheckedUpdateWithoutBookmarkInput>
}

export type TopicsUpdateManyWithWhereWithoutBookmarkInput = {
  where: Prisma.TopicsScalarWhereInput
  data: Prisma.XOR<Prisma.TopicsUpdateManyMutationInput, Prisma.TopicsUncheckedUpdateManyWithoutBookmarkInput>
}

export type TopicsCreateManyUserInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  shortDescription: string
  description: string
  duration: Date | string
  image?: string | null
  likes: number
  content: string
  level: $Enums.Level
}

export type TopicsUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  shortDescription?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  duration?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.EnumLevelFieldUpdateOperationsInput | $Enums.Level
  favorites?: Prisma.FavoriteUpdateManyWithoutTopicsNestedInput
  bookmark?: Prisma.BookmarkUpdateManyWithoutTopicsNestedInput
}

export type TopicsUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  shortDescription?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  duration?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.EnumLevelFieldUpdateOperationsInput | $Enums.Level
  favorites?: Prisma.FavoriteUncheckedUpdateManyWithoutTopicsNestedInput
  bookmark?: Prisma.BookmarkUncheckedUpdateManyWithoutTopicsNestedInput
}

export type TopicsUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  shortDescription?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  duration?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.EnumLevelFieldUpdateOperationsInput | $Enums.Level
}

export type TopicsUpdateWithoutFavoritesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  shortDescription?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  duration?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.EnumLevelFieldUpdateOperationsInput | $Enums.Level
  user?: Prisma.UserUpdateOneRequiredWithoutTopicsNestedInput
  bookmark?: Prisma.BookmarkUpdateManyWithoutTopicsNestedInput
}

export type TopicsUncheckedUpdateWithoutFavoritesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  shortDescription?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  duration?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.EnumLevelFieldUpdateOperationsInput | $Enums.Level
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  bookmark?: Prisma.BookmarkUncheckedUpdateManyWithoutTopicsNestedInput
}

export type TopicsUncheckedUpdateManyWithoutFavoritesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  shortDescription?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  duration?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.EnumLevelFieldUpdateOperationsInput | $Enums.Level
  userId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type TopicsUpdateWithoutBookmarkInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  shortDescription?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  duration?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.EnumLevelFieldUpdateOperationsInput | $Enums.Level
  user?: Prisma.UserUpdateOneRequiredWithoutTopicsNestedInput
  favorites?: Prisma.FavoriteUpdateManyWithoutTopicsNestedInput
}

export type TopicsUncheckedUpdateWithoutBookmarkInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  shortDescription?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  duration?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.EnumLevelFieldUpdateOperationsInput | $Enums.Level
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  favorites?: Prisma.FavoriteUncheckedUpdateManyWithoutTopicsNestedInput
}

export type TopicsUncheckedUpdateManyWithoutBookmarkInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  shortDescription?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  duration?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  likes?: Prisma.IntFieldUpdateOperationsInput | number
  content?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.EnumLevelFieldUpdateOperationsInput | $Enums.Level
  userId?: Prisma.StringFieldUpdateOperationsInput | string
}


/**
 * Count Type TopicsCountOutputType
 */

export type TopicsCountOutputType = {
  favorites: number
  bookmark: number
}

export type TopicsCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  favorites?: boolean | TopicsCountOutputTypeCountFavoritesArgs
  bookmark?: boolean | TopicsCountOutputTypeCountBookmarkArgs
}

/**
 * TopicsCountOutputType without action
 */
export type TopicsCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TopicsCountOutputType
   */
  select?: Prisma.TopicsCountOutputTypeSelect<ExtArgs> | null
}

/**
 * TopicsCountOutputType without action
 */
export type TopicsCountOutputTypeCountFavoritesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FavoriteWhereInput
}

/**
 * TopicsCountOutputType without action
 */
export type TopicsCountOutputTypeCountBookmarkArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.BookmarkWhereInput
}


export type TopicsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  title?: boolean
  shortDescription?: boolean
  description?: boolean
  duration?: boolean
  image?: boolean
  likes?: boolean
  content?: boolean
  level?: boolean
  userId?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  favorites?: boolean | Prisma.Topics$favoritesArgs<ExtArgs>
  bookmark?: boolean | Prisma.Topics$bookmarkArgs<ExtArgs>
  _count?: boolean | Prisma.TopicsCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["topics"]>

export type TopicsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  title?: boolean
  shortDescription?: boolean
  description?: boolean
  duration?: boolean
  image?: boolean
  likes?: boolean
  content?: boolean
  level?: boolean
  userId?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["topics"]>

export type TopicsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  title?: boolean
  shortDescription?: boolean
  description?: boolean
  duration?: boolean
  image?: boolean
  likes?: boolean
  content?: boolean
  level?: boolean
  userId?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["topics"]>

export type TopicsSelectScalar = {
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  title?: boolean
  shortDescription?: boolean
  description?: boolean
  duration?: boolean
  image?: boolean
  likes?: boolean
  content?: boolean
  level?: boolean
  userId?: boolean
}

export type TopicsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "title" | "shortDescription" | "description" | "duration" | "image" | "likes" | "content" | "level" | "userId", ExtArgs["result"]["topics"]>
export type TopicsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  favorites?: boolean | Prisma.Topics$favoritesArgs<ExtArgs>
  bookmark?: boolean | Prisma.Topics$bookmarkArgs<ExtArgs>
  _count?: boolean | Prisma.TopicsCountOutputTypeDefaultArgs<ExtArgs>
}
export type TopicsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type TopicsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $TopicsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Topics"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
    favorites: Prisma.$FavoritePayload<ExtArgs>[]
    bookmark: Prisma.$BookmarkPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    createdAt: Date
    updatedAt: Date
    title: string
    shortDescription: string
    description: string
    duration: Date
    image: string | null
    likes: number
    content: string
    level: $Enums.Level
    userId: string
  }, ExtArgs["result"]["topics"]>
  composites: {}
}

export type TopicsGetPayload<S extends boolean | null | undefined | TopicsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TopicsPayload, S>

export type TopicsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TopicsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TopicsCountAggregateInputType | true
  }

export interface TopicsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Topics'], meta: { name: 'Topics' } }
  /**
   * Find zero or one Topics that matches the filter.
   * @param {TopicsFindUniqueArgs} args - Arguments to find a Topics
   * @example
   * // Get one Topics
   * const topics = await prisma.topics.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TopicsFindUniqueArgs>(args: Prisma.SelectSubset<T, TopicsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TopicsClient<runtime.Types.Result.GetResult<Prisma.$TopicsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Topics that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TopicsFindUniqueOrThrowArgs} args - Arguments to find a Topics
   * @example
   * // Get one Topics
   * const topics = await prisma.topics.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TopicsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TopicsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TopicsClient<runtime.Types.Result.GetResult<Prisma.$TopicsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Topics that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TopicsFindFirstArgs} args - Arguments to find a Topics
   * @example
   * // Get one Topics
   * const topics = await prisma.topics.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TopicsFindFirstArgs>(args?: Prisma.SelectSubset<T, TopicsFindFirstArgs<ExtArgs>>): Prisma.Prisma__TopicsClient<runtime.Types.Result.GetResult<Prisma.$TopicsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Topics that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TopicsFindFirstOrThrowArgs} args - Arguments to find a Topics
   * @example
   * // Get one Topics
   * const topics = await prisma.topics.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TopicsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TopicsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TopicsClient<runtime.Types.Result.GetResult<Prisma.$TopicsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Topics that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TopicsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Topics
   * const topics = await prisma.topics.findMany()
   * 
   * // Get first 10 Topics
   * const topics = await prisma.topics.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const topicsWithIdOnly = await prisma.topics.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TopicsFindManyArgs>(args?: Prisma.SelectSubset<T, TopicsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TopicsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Topics.
   * @param {TopicsCreateArgs} args - Arguments to create a Topics.
   * @example
   * // Create one Topics
   * const Topics = await prisma.topics.create({
   *   data: {
   *     // ... data to create a Topics
   *   }
   * })
   * 
   */
  create<T extends TopicsCreateArgs>(args: Prisma.SelectSubset<T, TopicsCreateArgs<ExtArgs>>): Prisma.Prisma__TopicsClient<runtime.Types.Result.GetResult<Prisma.$TopicsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Topics.
   * @param {TopicsCreateManyArgs} args - Arguments to create many Topics.
   * @example
   * // Create many Topics
   * const topics = await prisma.topics.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TopicsCreateManyArgs>(args?: Prisma.SelectSubset<T, TopicsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Topics and returns the data saved in the database.
   * @param {TopicsCreateManyAndReturnArgs} args - Arguments to create many Topics.
   * @example
   * // Create many Topics
   * const topics = await prisma.topics.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Topics and only return the `id`
   * const topicsWithIdOnly = await prisma.topics.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends TopicsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, TopicsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TopicsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Topics.
   * @param {TopicsDeleteArgs} args - Arguments to delete one Topics.
   * @example
   * // Delete one Topics
   * const Topics = await prisma.topics.delete({
   *   where: {
   *     // ... filter to delete one Topics
   *   }
   * })
   * 
   */
  delete<T extends TopicsDeleteArgs>(args: Prisma.SelectSubset<T, TopicsDeleteArgs<ExtArgs>>): Prisma.Prisma__TopicsClient<runtime.Types.Result.GetResult<Prisma.$TopicsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Topics.
   * @param {TopicsUpdateArgs} args - Arguments to update one Topics.
   * @example
   * // Update one Topics
   * const topics = await prisma.topics.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TopicsUpdateArgs>(args: Prisma.SelectSubset<T, TopicsUpdateArgs<ExtArgs>>): Prisma.Prisma__TopicsClient<runtime.Types.Result.GetResult<Prisma.$TopicsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Topics.
   * @param {TopicsDeleteManyArgs} args - Arguments to filter Topics to delete.
   * @example
   * // Delete a few Topics
   * const { count } = await prisma.topics.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TopicsDeleteManyArgs>(args?: Prisma.SelectSubset<T, TopicsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Topics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TopicsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Topics
   * const topics = await prisma.topics.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TopicsUpdateManyArgs>(args: Prisma.SelectSubset<T, TopicsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Topics and returns the data updated in the database.
   * @param {TopicsUpdateManyAndReturnArgs} args - Arguments to update many Topics.
   * @example
   * // Update many Topics
   * const topics = await prisma.topics.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Topics and only return the `id`
   * const topicsWithIdOnly = await prisma.topics.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends TopicsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, TopicsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TopicsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Topics.
   * @param {TopicsUpsertArgs} args - Arguments to update or create a Topics.
   * @example
   * // Update or create a Topics
   * const topics = await prisma.topics.upsert({
   *   create: {
   *     // ... data to create a Topics
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Topics we want to update
   *   }
   * })
   */
  upsert<T extends TopicsUpsertArgs>(args: Prisma.SelectSubset<T, TopicsUpsertArgs<ExtArgs>>): Prisma.Prisma__TopicsClient<runtime.Types.Result.GetResult<Prisma.$TopicsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Topics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TopicsCountArgs} args - Arguments to filter Topics to count.
   * @example
   * // Count the number of Topics
   * const count = await prisma.topics.count({
   *   where: {
   *     // ... the filter for the Topics we want to count
   *   }
   * })
  **/
  count<T extends TopicsCountArgs>(
    args?: Prisma.Subset<T, TopicsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TopicsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Topics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TopicsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TopicsAggregateArgs>(args: Prisma.Subset<T, TopicsAggregateArgs>): Prisma.PrismaPromise<GetTopicsAggregateType<T>>

  /**
   * Group by Topics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TopicsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TopicsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TopicsGroupByArgs['orderBy'] }
      : { orderBy?: TopicsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TopicsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTopicsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Topics model
 */
readonly fields: TopicsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Topics.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TopicsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  favorites<T extends Prisma.Topics$favoritesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Topics$favoritesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  bookmark<T extends Prisma.Topics$bookmarkArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Topics$bookmarkArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BookmarkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Topics model
 */
export interface TopicsFieldRefs {
  readonly id: Prisma.FieldRef<"Topics", 'String'>
  readonly createdAt: Prisma.FieldRef<"Topics", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Topics", 'DateTime'>
  readonly title: Prisma.FieldRef<"Topics", 'String'>
  readonly shortDescription: Prisma.FieldRef<"Topics", 'String'>
  readonly description: Prisma.FieldRef<"Topics", 'String'>
  readonly duration: Prisma.FieldRef<"Topics", 'DateTime'>
  readonly image: Prisma.FieldRef<"Topics", 'String'>
  readonly likes: Prisma.FieldRef<"Topics", 'Int'>
  readonly content: Prisma.FieldRef<"Topics", 'String'>
  readonly level: Prisma.FieldRef<"Topics", 'Level'>
  readonly userId: Prisma.FieldRef<"Topics", 'String'>
}
    

// Custom InputTypes
/**
 * Topics findUnique
 */
export type TopicsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topics
   */
  select?: Prisma.TopicsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Topics
   */
  omit?: Prisma.TopicsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopicsInclude<ExtArgs> | null
  /**
   * Filter, which Topics to fetch.
   */
  where: Prisma.TopicsWhereUniqueInput
}

/**
 * Topics findUniqueOrThrow
 */
export type TopicsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topics
   */
  select?: Prisma.TopicsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Topics
   */
  omit?: Prisma.TopicsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopicsInclude<ExtArgs> | null
  /**
   * Filter, which Topics to fetch.
   */
  where: Prisma.TopicsWhereUniqueInput
}

/**
 * Topics findFirst
 */
export type TopicsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topics
   */
  select?: Prisma.TopicsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Topics
   */
  omit?: Prisma.TopicsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopicsInclude<ExtArgs> | null
  /**
   * Filter, which Topics to fetch.
   */
  where?: Prisma.TopicsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Topics to fetch.
   */
  orderBy?: Prisma.TopicsOrderByWithRelationInput | Prisma.TopicsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Topics.
   */
  cursor?: Prisma.TopicsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Topics from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Topics.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Topics.
   */
  distinct?: Prisma.TopicsScalarFieldEnum | Prisma.TopicsScalarFieldEnum[]
}

/**
 * Topics findFirstOrThrow
 */
export type TopicsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topics
   */
  select?: Prisma.TopicsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Topics
   */
  omit?: Prisma.TopicsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopicsInclude<ExtArgs> | null
  /**
   * Filter, which Topics to fetch.
   */
  where?: Prisma.TopicsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Topics to fetch.
   */
  orderBy?: Prisma.TopicsOrderByWithRelationInput | Prisma.TopicsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Topics.
   */
  cursor?: Prisma.TopicsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Topics from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Topics.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Topics.
   */
  distinct?: Prisma.TopicsScalarFieldEnum | Prisma.TopicsScalarFieldEnum[]
}

/**
 * Topics findMany
 */
export type TopicsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topics
   */
  select?: Prisma.TopicsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Topics
   */
  omit?: Prisma.TopicsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopicsInclude<ExtArgs> | null
  /**
   * Filter, which Topics to fetch.
   */
  where?: Prisma.TopicsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Topics to fetch.
   */
  orderBy?: Prisma.TopicsOrderByWithRelationInput | Prisma.TopicsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Topics.
   */
  cursor?: Prisma.TopicsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Topics from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Topics.
   */
  skip?: number
  distinct?: Prisma.TopicsScalarFieldEnum | Prisma.TopicsScalarFieldEnum[]
}

/**
 * Topics create
 */
export type TopicsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topics
   */
  select?: Prisma.TopicsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Topics
   */
  omit?: Prisma.TopicsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopicsInclude<ExtArgs> | null
  /**
   * The data needed to create a Topics.
   */
  data: Prisma.XOR<Prisma.TopicsCreateInput, Prisma.TopicsUncheckedCreateInput>
}

/**
 * Topics createMany
 */
export type TopicsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Topics.
   */
  data: Prisma.TopicsCreateManyInput | Prisma.TopicsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Topics createManyAndReturn
 */
export type TopicsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topics
   */
  select?: Prisma.TopicsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Topics
   */
  omit?: Prisma.TopicsOmit<ExtArgs> | null
  /**
   * The data used to create many Topics.
   */
  data: Prisma.TopicsCreateManyInput | Prisma.TopicsCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopicsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Topics update
 */
export type TopicsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topics
   */
  select?: Prisma.TopicsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Topics
   */
  omit?: Prisma.TopicsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopicsInclude<ExtArgs> | null
  /**
   * The data needed to update a Topics.
   */
  data: Prisma.XOR<Prisma.TopicsUpdateInput, Prisma.TopicsUncheckedUpdateInput>
  /**
   * Choose, which Topics to update.
   */
  where: Prisma.TopicsWhereUniqueInput
}

/**
 * Topics updateMany
 */
export type TopicsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Topics.
   */
  data: Prisma.XOR<Prisma.TopicsUpdateManyMutationInput, Prisma.TopicsUncheckedUpdateManyInput>
  /**
   * Filter which Topics to update
   */
  where?: Prisma.TopicsWhereInput
  /**
   * Limit how many Topics to update.
   */
  limit?: number
}

/**
 * Topics updateManyAndReturn
 */
export type TopicsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topics
   */
  select?: Prisma.TopicsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Topics
   */
  omit?: Prisma.TopicsOmit<ExtArgs> | null
  /**
   * The data used to update Topics.
   */
  data: Prisma.XOR<Prisma.TopicsUpdateManyMutationInput, Prisma.TopicsUncheckedUpdateManyInput>
  /**
   * Filter which Topics to update
   */
  where?: Prisma.TopicsWhereInput
  /**
   * Limit how many Topics to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopicsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Topics upsert
 */
export type TopicsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topics
   */
  select?: Prisma.TopicsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Topics
   */
  omit?: Prisma.TopicsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopicsInclude<ExtArgs> | null
  /**
   * The filter to search for the Topics to update in case it exists.
   */
  where: Prisma.TopicsWhereUniqueInput
  /**
   * In case the Topics found by the `where` argument doesn't exist, create a new Topics with this data.
   */
  create: Prisma.XOR<Prisma.TopicsCreateInput, Prisma.TopicsUncheckedCreateInput>
  /**
   * In case the Topics was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TopicsUpdateInput, Prisma.TopicsUncheckedUpdateInput>
}

/**
 * Topics delete
 */
export type TopicsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topics
   */
  select?: Prisma.TopicsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Topics
   */
  omit?: Prisma.TopicsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopicsInclude<ExtArgs> | null
  /**
   * Filter which Topics to delete.
   */
  where: Prisma.TopicsWhereUniqueInput
}

/**
 * Topics deleteMany
 */
export type TopicsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Topics to delete
   */
  where?: Prisma.TopicsWhereInput
  /**
   * Limit how many Topics to delete.
   */
  limit?: number
}

/**
 * Topics.favorites
 */
export type Topics$favoritesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Favorite
   */
  select?: Prisma.FavoriteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Favorite
   */
  omit?: Prisma.FavoriteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FavoriteInclude<ExtArgs> | null
  where?: Prisma.FavoriteWhereInput
  orderBy?: Prisma.FavoriteOrderByWithRelationInput | Prisma.FavoriteOrderByWithRelationInput[]
  cursor?: Prisma.FavoriteWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FavoriteScalarFieldEnum | Prisma.FavoriteScalarFieldEnum[]
}

/**
 * Topics.bookmark
 */
export type Topics$bookmarkArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Bookmark
   */
  select?: Prisma.BookmarkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Bookmark
   */
  omit?: Prisma.BookmarkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BookmarkInclude<ExtArgs> | null
  where?: Prisma.BookmarkWhereInput
  orderBy?: Prisma.BookmarkOrderByWithRelationInput | Prisma.BookmarkOrderByWithRelationInput[]
  cursor?: Prisma.BookmarkWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.BookmarkScalarFieldEnum | Prisma.BookmarkScalarFieldEnum[]
}

/**
 * Topics without action
 */
export type TopicsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topics
   */
  select?: Prisma.TopicsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Topics
   */
  omit?: Prisma.TopicsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopicsInclude<ExtArgs> | null
}
